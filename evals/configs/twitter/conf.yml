# Configuration file of FAR training experiment

# ========== Cluster configuration ==========
# ip address of the parameter server (need 1 GPU process)
ps_ip: 0.0.0.0

# ip address of each worker:# of available gpus process on each gpu in this node
# Note that if we collocate ps and worker on same GPU, then we need to decrease this number of available processes on that GPU by 1
# E.g., master node has 4 available processes, then 1 for the ps, and worker should be set to: worker:3
worker_ips:
    - 0.0.0.0:[8] # worker_ip: [(# processes on gpu) for gpu in available_gpus] eg. 10.0.0.2:[4,4,4,4] This node has 4 gpus, each gpu has 4 processes.


exp_path: /mnt/gaodawei.gdw/FedScale/fedscale/core

# Entry function of executor and aggregator under $exp_path
executor_entry: executor.py

aggregator_entry: aggregator.py

auth:
    ssh_user: "root"
    ssh_private_key: ~/.ssh/id_rsa

# cmd to run before we can indeed run FAR (in order)
setup_commands:
    - source /mnt/gaodawei.gdw/miniconda3/bin/activate fedscale
    - export NCCL_SOCKET_IFNAME='enp94s0f0'         # Run "ifconfig" to ensure the right NIC for nccl if you have multiple NICs

# ========== Additional job configuration ==========
# Default parameters are specified in argParser.py, wherein more description of the parameter can be found

job_conf:
    - job_name: twitter                   # Generate logs under this folder: log_path/job_name/time_stamp
    - log_path: /mnt/gaodawei.gdw/FedScale/evals # Path of log files
    - total_worker: 200                      # Number of participants per round, we use K=100 in our paper, large K will be much slower
    - data_set: twitter                     # Dataset: openImg, google_speech, stackoverflow
    - data_dir: /mnt/gaodawei.gdw/FedScale/dataset/data/    # Path of the dataset
    - device_conf_file: /mnt/gaodawei.gdw/FedScale/dataset/data/device_info/client_device_capacity     # Path of the client trace
    - device_avail_file: /mnt/gaodawei.gdw/FedScale/dataset/data/device_info/client_behave_trace
    - model: lr                            # Models: e.g., shufflenet_v2_x2_0, mobilenet_v2, resnet34, albert-base-v2
    - gradient_policy: fed-avg                 # {"fed-yogi", "fed-prox", "fed-avg"}, "fed-avg" by default
    - eval_interval: 2                     # How many rounds to run a testing on the testing set
    - rounds: 1000                          # Number of rounds to run this training. We use 1000 in our paper, while it may converge w/ ~400 rounds
    - filter_less: 0                       # Remove clients w/ less than 21 samples
    - num_loaders: 2
    - local_steps: 4
    - learning_rate: 0.05
    - decay_factor: 1.  # decay factor of the learning rate
    - batch_size: 5
    - test_bsz: 20
    - use_cuda: True
    - input_dim: 400000
    - sample_seed: 2
    - test_ratio: 1.
    - loss_decay: 0.
    - hidden: 2048
    - dropout: 0.
    - ps_port: 29501